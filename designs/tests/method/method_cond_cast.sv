//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "a_mod"
(
);

// Variables generated for SystemC signals
logic [3:0] s;
logic signed [7:0] t;
logic signed [31:0] t0;
logic signed [31:0] t1;
logic signed [31:0] t2;

// Local parameters generated for C++ constants
localparam logic signed [79:0] y = '0;

//------------------------------------------------------------------------------
// Method process: if_var1 (test_cond_cast.cpp:35:5) 

// Process-local variables
logic [65:0] x;

always_comb 
begin : if_var1     // test_cond_cast.cpp:35:5
    integer k;
    k = '0;
    x = s;
    if (|64'(s))
    begin
        if (12'(t) == 0)
        begin
            k = 1;
        end
    end
    if (|42'(k + 2'sd1))
    begin
        if (42'(k) == 1'd1)
        begin
            k = 2;
        end
    end
    if (x > 22'(y) || signed'(11'(x)) == k)
    begin
        k = 3;
    end
end

//------------------------------------------------------------------------------
// Method process: if_const1 (test_cond_cast.cpp:55:5) 

always_comb 
begin : if_const1     // test_cond_cast.cpp:55:5
    integer k;
    k = '0;
    if (12'd51 == s)
    begin
        k = 1;
    end else begin
        if (4'd51 == s)
        begin
            k = 2;
            if (64'(s) == 1'd1)
            begin
                k = 3;
            end
        end else begin
            k = 4;
        end
    end
    t0 = k;
end

//------------------------------------------------------------------------------
// Method process: switch_var1 (test_cond_cast.cpp:74:5) 

always_comb 
begin : switch_var1     // test_cond_cast.cpp:74:5
    integer k;
    logic [2:0] x_1;
    k = '0;
    x_1 = s;
    case (2'(x_1))
    1 : begin
        k = 1;
    end
    2 : begin
        k = 2;
    end
    endcase
    t1 = k;
end

//------------------------------------------------------------------------------
// Method process: switch_var2 (test_cond_cast.cpp:87:5) 

always_comb 
begin : switch_var2     // test_cond_cast.cpp:87:5
    integer k;
    logic [2:0] x_1;
    k = '0;
    x_1 = s;
    case (32'(x_1))
    1 : begin
        k = 1;
    end
    2 : begin
        k = 2;
    end
    endcase
    t2 = k;
end

//------------------------------------------------------------------------------
// Method process: for_var1 (test_cond_cast.cpp:99:5) 

always_comb 
begin : for_var1     // test_cond_cast.cpp:99:5
    integer k;
    k = '0;
    for (; ; )
    begin
        if (k == 10)
        begin
            break;
        end
        k++;
    end
    for (int i = 10; |3'(i); i--)
    begin
        k--;
    end
end

//------------------------------------------------------------------------------
// Method process: while_var1 (test_cond_cast.cpp:112:5) 

always_comb 
begin : while_var1     // test_cond_cast.cpp:112:5
    integer k;
    k = '0;
    while (|32'(s))
    begin
        k++;
    end
    while (11'(k) > 5'sd10)
    begin
        k--;
    end
    while (|33'(k))
    begin
        k++;
    end
    do
    begin
        k = '0;
    end
    while (|4'(s));
end

endmodule


