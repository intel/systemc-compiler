//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);


//------------------------------------------------------------------------------
// Child module instances

A a_mod
(

);

endmodule



//==============================================================================
//
// Module: A (test_array_in_if.cpp:212:5)
//
module A // "b_mod.a_mod"
(
);

// Variables generated for SystemC signals
logic block_access[3];
logic signed [31:0] s;
logic [1:0] sleep_idle_cntr[3];
logic ms_pwrin_nenable[3];
logic signed [31:0] t0;
logic signed [31:0] t1;
logic signed [31:0] t2;
logic signed [31:0] t3;
logic signed [31:0] t4;
logic signed [31:0] t5;
logic signed [31:0] t6;
logic signed [31:0] t7;
logic signed [31:0] t8;

// Local parameters generated for C++ constants
localparam logic [31:0] BLOCK_NUM0 = 3;

//------------------------------------------------------------------------------
// Method process: func_in_if1 (test_array_in_if.cpp:64:5) 

always_comb 
begin : func_in_if1     // test_array_in_if.cpp:64:5
    integer i;
    logic TMP_0;
    logic k;
    // Call f() begin
    TMP_0 = k;
    // Call f() end
    if (TMP_0 || |i)
    begin
        i = 1;
    end
end

//------------------------------------------------------------------------------
// Method process: func_in_if2 (test_array_in_if.cpp:72:5) 

always_comb 
begin : func_in_if2     // test_array_in_if.cpp:72:5
    integer i;
    logic TMP_0;
    logic k;
    logic TMP_1;
    integer i_1;
    // Call f() begin
    TMP_0 = k;
    // Call f() end
    i_1 = i;
    // Call g() begin
    TMP_1 = |i_1;
    // Call g() end
    if (TMP_0 || TMP_1)
    begin
        i = 1;
    end
end

//------------------------------------------------------------------------------
// Method process: func_in_if_const1 (test_array_in_if.cpp:81:5) 

always_comb 
begin : func_in_if_const1     // test_array_in_if.cpp:81:5
    integer i;
    t0 = i;
end

//------------------------------------------------------------------------------
// Method process: func_in_if_const2 (test_array_in_if.cpp:91:5) 

always_comb 
begin : func_in_if_const2     // test_array_in_if.cpp:91:5
    integer i;
    i = 1;
    t1 = i;
end

//------------------------------------------------------------------------------
// Method process: func_in_if_const3 (test_array_in_if.cpp:101:5) 

always_comb 
begin : func_in_if_const3     // test_array_in_if.cpp:101:5
    integer i;
    logic TMP_0;
    logic k;
    // Call f() begin
    TMP_0 = k;
    // Call f() end
    i = 1;
    t2 = i;
end

//------------------------------------------------------------------------------
// Method process: func_in_if_const4 (test_array_in_if.cpp:111:5) 

always_comb 
begin : func_in_if_const4     // test_array_in_if.cpp:111:5
    integer i;
    logic TMP_0;
    integer i_1;
    i_1 = i;
    // Call g() begin
    TMP_0 = |i_1;
    // Call g() end
    if (0 || TMP_0)
    begin
        i = 1;
    end
    t3 = i;
end

//------------------------------------------------------------------------------
// Method process: chan_array_in_if1 (test_array_in_if.cpp:121:5) 

always_comb 
begin : chan_array_in_if1     // test_array_in_if.cpp:121:5
    integer i;
    if (ms_pwrin_nenable[i] || |i)
    begin
        i = 1;
    end
    t4 = i;
end

//------------------------------------------------------------------------------
// Method process: chan_array_in_if2 (test_array_in_if.cpp:133:5) 

always_comb 
begin : chan_array_in_if2     // test_array_in_if.cpp:133:5
    for (int i = 0; i < BLOCK_NUM0; i++)
    begin
        if (block_access[i] || ms_pwrin_nenable[i])
        begin
            sleep_idle_cntr[i] = '0;
        end
    end
end

//------------------------------------------------------------------------------
// Method process: mem_array_in_if (test_array_in_if.cpp:145:5) 

// Process-local variables
logic [33:0] arr[5];
logic arr2[4][3];

always_comb 
begin : mem_array_in_if     // test_array_in_if.cpp:145:5
    integer k;
    k = '0;
    for (int i = 0; i < 4; i++)
    begin
        if (arr[i] == s && arr2[i][k])
        begin
            k++;
        end
    end
    t5 = k;
end

//------------------------------------------------------------------------------
// Method process: loc_array_in_if (test_array_in_if.cpp:157:5) 

always_comb 
begin : loc_array_in_if     // test_array_in_if.cpp:157:5
    logic signed [9:0] larr[3];
    integer unsigned larr2[1][4];
    integer k;
    larr[0] = 1; larr[1] = 2; larr[2] = 3;
    t6 = '0;
    if (larr[s] == larr2[s][1])
    begin
        k = 1;
        t6 = k;
    end
end

//------------------------------------------------------------------------------
// Method process: decl_array_in_if1 (test_array_in_if.cpp:170:5) 

always_comb 
begin : decl_array_in_if1     // test_array_in_if.cpp:170:5
    logic signed [9:0] larr[3];
    integer larr2[3][3];
    t7 = '0;
    if (|s)
    begin
        larr[0] = 1; larr[1] = 2; larr[2] = 3;
        larr2[s][s] = larr[1];
        if (s == 3)
        begin
            larr[0] = '0;
        end
        t7 = larr[s] + larr2[s][s];
    end
end

//------------------------------------------------------------------------------
// Method process: decl_array_in_if2 (test_array_in_if.cpp:187:5) 

always_comb 
begin : decl_array_in_if2     // test_array_in_if.cpp:187:5
    integer a;
    logic signed [9:0] ll[3];
    logic signed [9:0] ll_1[3];
    a = '0;
    if (|s)
    begin
        ll[0] = 0; ll[1] = 0; ll[2] = 0;
        ll[1] = 1;
        a = a + ll[s];
        if (s == 1)
        begin
            ll_1[0] = 0; ll_1[1] = 0; ll_1[2] = 0;
            ll_1[1] = 2;
            a = a + ll_1[s];
        end
        a = a + ll[s + 1];
    end
    t8 = a;
end

endmodule


