//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: top ()
//
module top // "t_inst"
(
);

// Variables generated for SystemC signals
logic clk;
logic rstn;
logic [1:0] in[2];
logic [1:0] out[2];
logic [1:0] out2d[2][2];


//------------------------------------------------------------------------------
// Child module instances

middle m_inst
(
  .clk(clk),
  .rstn(rstn),
  .in(in),
  .out(out),
  .out2d(out2d)
);

endmodule



//==============================================================================
//
// Module: middle (test_port_array_bind.cpp:125:5)
//
module middle // "t_inst.m_inst"
(
    input logic clk,
    input logic rstn,
    input logic [1:0] in[2],
    output logic [1:0] out[2],
    output logic [1:0] out2d[2][2]
);

// Variables generated for SystemC signals
logic [1:0] in2d[2][2];

//------------------------------------------------------------------------------
// Method process: drive_in2d_method (test_port_array_bind.cpp:86:5) 

always_comb 
begin : drive_in2d_method     // test_port_array_bind.cpp:86:5
    logic [63:0] l;
    l = in2d[0][0] + 1'd1;
    in2d[0][1] = 1'd1;
end


//------------------------------------------------------------------------------
// Child module instances

bottom b_inst
(
  .clk(clk),
  .rstn(rstn),
  .in(in),
  .out(out),
  .in2d(in2d),
  .out2d(out2d)
);

endmodule



//==============================================================================
//
// Module: bottom (test_port_array_bind.cpp:59:5)
//
module bottom // "t_inst.m_inst.b_inst"
(
    input logic clk,
    input logic rstn,
    input logic [1:0] in[2],
    output logic [1:0] out[2],
    input logic [1:0] in2d[2][2],
    output logic [1:0] out2d[2][2]
);

//------------------------------------------------------------------------------
// Method process: test_method (test_port_array_bind.cpp:42:5) 

always_comb 
begin : test_method     // test_port_array_bind.cpp:42:5
    out[0] = in[1];
    out2d[0][1] = in2d[1][0] + 1'd1;
end

endmodule


