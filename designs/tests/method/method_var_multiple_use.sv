//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
    input logic clk
);

// Variables generated for SystemC signals
logic rst;
logic signed [31:0] t;


//------------------------------------------------------------------------------
// Child module instances

Child child
(
  .clk(clk),
  .rst(rst),
  .in(t),
  .out(t)
);

endmodule



//==============================================================================
//
// Module: Child (test_var_multiple_use.cpp:62:5)
//
module Child // "top.child"
(
    input logic clk,
    input logic rst,
    input logic signed [31:0] in,
    output logic signed [31:0] out
);

// Variables generated for SystemC signals
logic signed [31:0] s;

// Local parameters generated for C++ constants
localparam logic [2:0] vv = '0;
localparam logic signed [31:0] c = 5;

//------------------------------------------------------------------------------
// Method process: methA (test_var_multiple_use.cpp:39:5) 

// Process-local variables
logic [2:0] v;

always_comb 
begin : methA     // test_var_multiple_use.cpp:39:5
    if (|in)
    begin
        v = c;
    end
    s = 2'd2 - v;
end

//------------------------------------------------------------------------------
// Method process: methB (test_var_multiple_use.cpp:45:5) 

always_comb 
begin : methB     // test_var_multiple_use.cpp:45:5
    out = in + vv;
end

//------------------------------------------------------------------------------
// Method process: methC (test_var_multiple_use.cpp:49:5) 

always_comb 
begin : methC     // test_var_multiple_use.cpp:49:5
    if (|in)
    begin
        out = '0;
    end else begin
        out = 1;
    end
end

endmodule


