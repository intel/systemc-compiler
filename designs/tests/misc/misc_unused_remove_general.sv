//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "a_mod"
(
    input logic clk
);

// Variables generated for SystemC signals
logic nrst;
logic [3:0] s;
logic [3:0] r;
logic signed [31:0] t0;
logic signed [31:0] t1;
logic signed [31:0] t3;
logic signed [31:0] t4;
logic signed [31:0] t5;
logic signed [31:0] t8;
logic signed [31:0] t9;
logic signed [31:0] t10;
logic signed [31:0] t11;

//------------------------------------------------------------------------------
// Method process: remove_vars1 (test_unused_remove_general.cpp:54:5) 

always_comb 
begin : remove_vars1     // test_unused_remove_general.cpp:54:5
    integer i;
    integer j;
    integer k;
    integer l;
    i = s;
    j = i + 2'sd1;
    k = 1 <<< j;
    l = k == r ? 1 : 2;
    t0 = l;
end

//------------------------------------------------------------------------------
// Method process: remove_vars2 (test_unused_remove_general.cpp:65:5) 

always_comb 
begin : remove_vars2     // test_unused_remove_general.cpp:65:5
    logic signed [5:0] i;
    logic signed [5:0] j;
    logic signed [5:0] m;
    i = '0;
    j = '0;
    m = '0;
    if (|s)
    begin
        j = i + r;
    end
    for (int k = 0; k < 3; ++k)
    begin
        if (|r)
        begin
            break;
        end
        m = |s || j == k;
    end
    t1 = m;
end

//------------------------------------------------------------------------------
// Method process: remove_vars3 (test_unused_remove_general.cpp:81:5) 

always_comb 
begin : remove_vars3     // test_unused_remove_general.cpp:81:5
    logic [3:0] i;
    logic [5:0] j;
    integer l;
    i = s;
    j = i + 1'd1;
    l = '0;
    for (int k = 0; k < j; ++k)
    begin
        l = l + 2'sd1;
    end
    t3 = l;
end

//------------------------------------------------------------------------------
// Clocked THREAD: remove_vars1_thread (test_unused_remove_general.cpp:95:5) 

// Thread-local variables
logic signed [5:0] i0;
logic signed [5:0] i_next;
logic signed [5:0] j0;
logic signed [5:0] j_next;
logic [1:0] remove_vars1_thread_PROC_STATE;
logic [1:0] remove_vars1_thread_PROC_STATE_next;

// Next-state combinational logic
always_comb begin : remove_vars1_thread_comb     // test_unused_remove_general.cpp:95:5
    remove_vars1_thread_func;
end
function void remove_vars1_thread_func;
    i_next = i0;
    j_next = j0;
    remove_vars1_thread_PROC_STATE_next = remove_vars1_thread_PROC_STATE;
    
    case (remove_vars1_thread_PROC_STATE)
        0: begin
            if (!(|s))
            begin
                j_next = j_next + i_next;
                remove_vars1_thread_PROC_STATE_next = '0; return;    // test_unused_remove_general.cpp:103:43;
            end
            i_next = r;
            remove_vars1_thread_PROC_STATE_next = '0; return;    // test_unused_remove_general.cpp:105:13;
        end
    endcase
endfunction

// Synchronous register update
always_ff @(posedge clk or negedge nrst) 
begin : remove_vars1_thread_ff
    if ( ~nrst ) begin
        i0 <= 1;
        j0 <= '0;
        remove_vars1_thread_PROC_STATE <= '0;    // test_unused_remove_general.cpp:100:9;
    end
    else begin
        i0 <= i_next;
        j0 <= j_next;
        remove_vars1_thread_PROC_STATE <= remove_vars1_thread_PROC_STATE_next;
    end
end

//------------------------------------------------------------------------------
// Method process: remove_empty_meth (test_unused_remove_general.cpp:110:5) 
// Empty process, no code generated 

//------------------------------------------------------------------------------
// Clocked THREAD: remove_empty_thread (test_unused_remove_general.cpp:116:5) 
// Empty process, no code generated 

//------------------------------------------------------------------------------
// Method process: remove_for (test_unused_remove_general.cpp:129:5) 

always_comb 
begin : remove_for     // test_unused_remove_general.cpp:129:5
    integer k0;
    integer k1;
    integer k2;
    integer unsigned i;
    k0 = 3;
    for (int unsigned i0_1 = 0; i0_1 < k0; ++i0_1)
    begin
        t8 = '0;
    end
    k1 = 1;
    for (int unsigned i1 = k1; i1 < 3; ++i1)
    begin
        t8 = 1;
    end
    k2 = 1;
    for (int unsigned i2 = 0; i2 < 3; i2 = i2 + k2)
    begin
        t8 = 2;
    end
    i = '0;
    for (; i < 3; ++i)
    begin
    end
    t8 = i;
end

//------------------------------------------------------------------------------
// Method process: remove_if (test_unused_remove_general.cpp:153:5) 

always_comb 
begin : remove_if     // test_unused_remove_general.cpp:153:5
    integer unsigned i1;
    logic [11:0] i2;
    logic [11:0] i3;
    logic i4;
    logic [11:0] i5;
    logic i6;
    t9 = '0;
    i1 = s;
    if (|i1)
    begin
        t9 = 1;
    end
    i2 = s;
    t9 = i2 == 1'd1 ? 1 : 2;
    i3 = s;
    i4 = s == 2'd2;
    t9 = i3 == 1'd1 || i4;
    i5 = s;
    i6 = s == 2'd2;
    if (i5 == 1'd1 || i6)
    begin
        t9 = 2;
    end
end

//------------------------------------------------------------------------------
// Method process: remove_while (test_unused_remove_general.cpp:176:5) 

always_comb 
begin : remove_while     // test_unused_remove_general.cpp:176:5
    integer i0_1;
    integer i1;
    logic signed [3:0] x;
    integer i2;
    i0_1 = 3;
    while (i0_1 > 0)
    begin
        i0_1 = i0_1 - 2'sd1;
        t10 = 1;
    end
    i1 = '0;
    x = 3;
    while (i1 != x)
    begin
        i1 = i1 + 2'sd1;
        t10 = 2;
    end
    i2 = 1;
    do
    begin
        i2 = i2 * 3'sd2;
        t10 = 3;
    end
    while (i2 < 10);
end

//------------------------------------------------------------------------------
// Clocked THREAD: remove_const_cond (test_unused_remove_general.cpp:192:5) 

// Thread-local variables
logic signed [31:0] t11_next;

// Next-state combinational logic
always_comb begin : remove_const_cond_comb     // test_unused_remove_general.cpp:192:5
    remove_const_cond_func;
end
function void remove_const_cond_func;
    integer k0;
    logic b1;
    t11_next = t11;
    k0 = 3;
    b1 = 1'd1;
    for (int unsigned i0_1 = k0; 1; ++i0_1)
    begin
        t11_next = '0;
    end
endfunction

// Synchronous register update
always_ff @(posedge clk or negedge nrst) 
begin : remove_const_cond_ff
    if ( ~nrst ) begin
    end
    else begin
        t11 <= t11_next;
    end
end

//------------------------------------------------------------------------------
// Method process: remove_unary (test_unused_remove_general.cpp:207:5) 

always_comb 
begin : remove_unary     // test_unused_remove_general.cpp:207:5
    logic [11:0] r1;
    r1 = '0;
    r1++;
    t4 = r1;
    for (int i_1 = 0; i_1 < 4; ++i_1)
    begin
        t4 = i_1;
    end
end

//------------------------------------------------------------------------------
// Method process: remove_compound (test_unused_remove_general.cpp:236:5) 

always_comb 
begin : remove_compound     // test_unused_remove_general.cpp:236:5
    integer p;
    integer q;
    integer unsigned p1;
    integer unsigned q1;
    logic [9:0] w;
    p = p + q;
    t5 = p;
    p1 = p1 + 1'd1;
    q1 = q1 + p1;
    t5 = q1;
    w = '0;
    t5 = w;
end

endmodule


