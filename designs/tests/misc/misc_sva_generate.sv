//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "test_top.a_mod"
(
    input logic clk,
    input logic rstn,
    input logic nrpi,
    output logic nrpo
);

// Variables generated for SystemC signals
logic o;
logic signed [31:0] s;
logic signed [31:0] s_d;
logic signed [31:0] r;

//------------------------------------------------------------------------------
// Clocked THREAD: thread1 (test_sva_generate.cpp:112:5) 

// Next-state combinational logic
always_comb begin : thread1_comb     // test_sva_generate.cpp:112:5
    thread1_func;
end
function void thread1_func;
endfunction

// Synchronous register update
always_ff @(posedge clk or negedge rstn) 
begin : thread1_ff
    if ( ~rstn ) begin

    `ifndef INTEL_SVA_OFF
        sctAssertLine114r : assert property ( o |-> ##3 |r );
    `endif // INTEL_SVA_OFF
    end
    else begin

    `ifndef INTEL_SVA_OFF
        sctAssertLine114 : assert property ( o |-> ##3 |r );
    `endif // INTEL_SVA_OFF
    end
end

`ifndef INTEL_SVA_OFF
sctAssertLine99 : assert property (
    @(posedge clk) |s |=> |s_d );
`endif // INTEL_SVA_OFF

endmodule


