//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.14
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
);

// Variables generated for SystemC signals
logic signed [31:0] ar1_t0[2];
logic signed [31:0] br1_t0[2];
logic signed [31:0] ar2_t0[2];
logic signed [31:0] br2_t0[2];
logic signed [31:0] ar3_t0[2];
logic signed [31:0] br3_t0[2];

// Local parameters generated for C++ constants
localparam logic [31:0] ar1_V[2] = '{ 1, 2 };
localparam logic [31:0] ar1_C[2] = '{ 1, 2 };
localparam logic [31:0] br1_V[2] = '{ 1, 2 };
localparam logic [31:0] ar2_V[2] = '{ 1, 2 };
localparam logic [31:0] ar2_C[2] = '{ 1, 2 };
localparam logic [31:0] br2_V[2] = '{ 1, 2 };
localparam logic [31:0] ar3_V[2] = '{ 1, 2 };
localparam logic [31:0] ar3_C[2] = '{ 0, 0 };
localparam logic [31:0] br3_V[2] = '{ 1, 2 };

//------------------------------------------------------------------------------
// Method process: ar1_proc (test_mif_array_differ.cpp:31:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : ar1_proc_sct_i 

    always_comb 
    begin : ar1_proc     // test_mif_array_differ.cpp:31:5
        integer unsigned l;
        l = ar1_V[sct_i] + ar1_C[sct_i];
        ar1_t0[sct_i] = l;
    end

end
endgenerate

//------------------------------------------------------------------------------
// Method process: br1_proc (test_mif_array_differ.cpp:53:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : br1_proc_sct_i 

    always_comb 
    begin : br1_proc     // test_mif_array_differ.cpp:53:5
        integer unsigned l;
        l = br1_V[sct_i];
        br1_t0[sct_i] = l;
    end

end
endgenerate

//------------------------------------------------------------------------------
// Method process: ar2_proc (test_mif_array_differ.cpp:31:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : ar2_proc_sct_i 

    always_comb 
    begin : ar2_proc     // test_mif_array_differ.cpp:31:5
        integer unsigned l;
        l = ar2_V[sct_i] + ar2_C[sct_i];
        ar2_t0[sct_i] = l;
    end

end
endgenerate

//------------------------------------------------------------------------------
// Method process: br2_proc (test_mif_array_differ.cpp:53:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : br2_proc_sct_i 

    always_comb 
    begin : br2_proc     // test_mif_array_differ.cpp:53:5
        integer unsigned l;
        l = br2_V[sct_i];
        br2_t0[sct_i] = l;
    end

end
endgenerate

//------------------------------------------------------------------------------
// Method process: ar3_proc (test_mif_array_differ.cpp:31:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : ar3_proc_sct_i 

    always_comb 
    begin : ar3_proc     // test_mif_array_differ.cpp:31:5
        integer unsigned l;
        l = ar3_V[sct_i] + ar3_C[sct_i];
        ar3_t0[sct_i] = l;
    end

end
endgenerate

//------------------------------------------------------------------------------
// Method process: br3_proc (test_mif_array_differ.cpp:53:5) 

// Modular interfaces array generate block
generate 
for (genvar sct_i = 0; sct_i != 2; sct_i = sct_i + 1) 
begin : br3_proc_sct_i 

    always_comb 
    begin : br3_proc     // test_mif_array_differ.cpp:53:5
        integer unsigned l;
        l = br3_V[sct_i];
        br3_t0[sct_i] = l;
    end

end
endgenerate

endmodule


