//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.14
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
);

// Variables generated for SystemC signals
logic minst_s;
logic signed [31:0] minst_t0;
logic signed [31:0] minst_t1;
logic signed [31:0] minst_t2;
logic signed [31:0] minst_t3;
logic ninst_s;
logic signed [31:0] ninst_t0;
logic signed [31:0] ninst_t1;
logic signed [31:0] ninst_t2;
logic signed [31:0] ninst_t3;

//------------------------------------------------------------------------------
// Method process: minst_locRecMeth (test_record_meth.cpp:37:5) 

always_comb 
begin : minst_locRecMeth     // test_record_meth.cpp:37:5
    logic t_a;
    logic [3:0] t_b;
    logic tt_a;
    logic [3:0] tt_b;
    logic [3:0] x;
    t_b = 0;
    tt_b = 0;
    t_a = 0;
    t_b = 4;
    tt_a = 1;
    tt_b = 5;
    x = t_b + tt_b;
    minst_t0 = x;
end

//------------------------------------------------------------------------------
// Method process: minst_locRecArrMeth (test_record_meth.cpp:53:5) 

always_comb 
begin : minst_locRecArrMeth     // test_record_meth.cpp:53:5
    logic v_a[2];
    logic [3:0] v_b[2];
    logic vv_a[4];
    logic [3:0] vv_b[4];
    integer sum;
    logic [3:0] x;
    v_a[0] = 0;
    v_b[0] = 10;
    v_b[1] = 20;
    sum = 0;
    for (integer i = 0; i < 4; ++i)
    begin
        vv_b[i] = (i < 2) ? v_b[i] : 4'(i);
        sum = sum + signed'({1'b0, vv_b[i]});
    end
    x = v_b[1] + vv_b[3];
    minst_t1 = x + sum;
end

//------------------------------------------------------------------------------
// Method process: minst_memRecMeth (test_record_meth.cpp:76:5) 

// Process-local variables
logic [3:0] minst_r_b;
logic minst_rr_a;
logic [3:0] minst_rr_b;

always_comb 
begin : minst_memRecMeth     // test_record_meth.cpp:76:5
    logic [3:0] x;
    minst_r_b = 4;
    minst_rr_a = minst_s;
    minst_rr_b = 5;
    x = minst_rr_a ? minst_r_b : minst_rr_b;
    minst_t2 = x;
end

//------------------------------------------------------------------------------
// Method process: minst_memRecArrMeth (test_record_meth.cpp:90:5) 

// Process-local variables
logic minst_w_a[2];
logic [3:0] minst_w_b[2];
logic [3:0] minst_ww_b[4];

always_comb 
begin : minst_memRecArrMeth     // test_record_meth.cpp:90:5
    integer sum;
    logic [3:0] x;
    minst_w_a[0] = 0;
    minst_w_b[0] = 10;
    minst_w_b[1] = 20;
    sum = 0;
    for (integer i = 0; i < 4; ++i)
    begin
        minst_ww_b[i] = (i < 2) ? minst_w_b[i] : 4'(i);
        sum = sum + signed'({1'b0, minst_ww_b[i]});
    end
    x = minst_w_b[1] + minst_ww_b[3];
    minst_t3 = x + sum;
end

//------------------------------------------------------------------------------
// Method process: ninst_locRecMeth (test_record_meth.cpp:37:5) 

always_comb 
begin : ninst_locRecMeth     // test_record_meth.cpp:37:5
    logic t_a;
    logic [3:0] t_b;
    logic tt_a;
    logic [3:0] tt_b;
    logic [3:0] x;
    t_b = 0;
    tt_b = 0;
    t_a = 0;
    t_b = 4;
    tt_a = 1;
    tt_b = 5;
    x = t_b + tt_b;
    ninst_t0 = x;
end

//------------------------------------------------------------------------------
// Method process: ninst_locRecArrMeth (test_record_meth.cpp:53:5) 

always_comb 
begin : ninst_locRecArrMeth     // test_record_meth.cpp:53:5
    logic v_a[2];
    logic [3:0] v_b[2];
    logic vv_a[4];
    logic [3:0] vv_b[4];
    integer sum;
    logic [3:0] x;
    v_a[0] = 0;
    v_b[0] = 10;
    v_b[1] = 20;
    sum = 0;
    for (integer i = 0; i < 4; ++i)
    begin
        vv_b[i] = (i < 2) ? v_b[i] : 4'(i);
        sum = sum + signed'({1'b0, vv_b[i]});
    end
    x = v_b[1] + vv_b[3];
    ninst_t1 = x + sum;
end

//------------------------------------------------------------------------------
// Method process: ninst_memRecMeth (test_record_meth.cpp:76:5) 

// Process-local variables
logic [3:0] ninst_r_b;
logic ninst_rr_a;
logic [3:0] ninst_rr_b;

always_comb 
begin : ninst_memRecMeth     // test_record_meth.cpp:76:5
    logic [3:0] x;
    ninst_r_b = 4;
    ninst_rr_a = ninst_s;
    ninst_rr_b = 5;
    x = ninst_rr_a ? ninst_r_b : ninst_rr_b;
    ninst_t2 = x;
end

//------------------------------------------------------------------------------
// Method process: ninst_memRecArrMeth (test_record_meth.cpp:90:5) 

// Process-local variables
logic ninst_w_a[2];
logic [3:0] ninst_w_b[2];
logic [3:0] ninst_ww_b[4];

always_comb 
begin : ninst_memRecArrMeth     // test_record_meth.cpp:90:5
    integer sum;
    logic [3:0] x;
    ninst_w_a[0] = 0;
    ninst_w_b[0] = 10;
    ninst_w_b[1] = 20;
    sum = 0;
    for (integer i = 0; i < 4; ++i)
    begin
        ninst_ww_b[i] = (i < 2) ? ninst_w_b[i] : 4'(i);
        sum = sum + signed'({1'b0, ninst_ww_b[i]});
    end
    x = ninst_w_b[1] + ninst_ww_b[3];
    ninst_t3 = x + sum;
end

//------------------------------------------------------------------------------
// Method process: memRecMeth (test_record_meth.cpp:122:5) 

// Process-local variables
logic [3:0] rr_b;

always_comb 
begin : memRecMeth     // test_record_meth.cpp:122:5
    rr_b = 5;
end

endmodule


