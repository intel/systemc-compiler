//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.14
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
);

// Variables generated for SystemC signals
logic [7:0] mif_b[2];
logic [31:0] s;
logic [31:0] t;
logic [31:0] t0;

// Local parameters generated for C++ constants
localparam logic [7:0] mif_a[2] = '{ 0, 0 };

//------------------------------------------------------------------------------
// Method process: unkwMif (test_use_def3.cpp:79:5) 

always_comb 
begin : unkwMif     // test_use_def3.cpp:79:5
    integer unsigned port;
    logic [7:0] a;
    logic [7:0] b;
    logic TMP_0;
    logic b_1;
    logic [7:0] c;
    logic TMP_1;
    logic [7:0] d;
    logic [7:0] e;
    logic TMP_2;
    logic res;
    logic [7:0] k;
    port = s;
    a = s;
    b = s + 1;
    // Call compare() begin
    b_1 = (a == b ? 1 : 2);
    TMP_0 = b_1;
    // Call compare() end
    c = s;
    // Call compare() begin
    b_1 = (c == c ? 1 : 2);
    TMP_1 = b_1;
    // Call compare() end
    d = s;
    e = s + 1;
    // Call compare() begin
    b_1 = (d == e ? 1 : 2);
    TMP_2 = b_1;
    // Call compare() end
    res = TMP_2;
    t0 = res;
    // Call def() begin
    k = 0;
    mif_b[port] = k;
    // Call def() end
end

//------------------------------------------------------------------------------
// Method process: unkwMulti (test_use_def3.cpp:96:6) 

always_comb 
begin : unkwMulti     // test_use_def3.cpp:96:6
    integer unsigned port;
    logic [7:0] b;
    logic TMP_0;
    logic b_1;
    logic TMP_1;
    port = s;
    // Call set() begin
    mif_b[port] = mif_a[port + 1] + 1;
    // Call set() end
    b = t;
    // Call compare() begin
    b_1 = (mif_a[s] == b ? 1 : 2);
    TMP_0 = b_1;
    // Call compare() end
    // Call compare() begin
    b_1 = (mif_a[s] == mif_a[s] ? 1 : 2);
    TMP_1 = b_1;
    // Call compare() end
    // Call set() begin
    mif_b[port] = mif_a[port - 1] + mif_a[port + 1];
    // Call set() end
end

//------------------------------------------------------------------------------
// Method process: unkwRec (test_use_def3.cpp:106:5) 

always_comb 
begin : unkwRec     // test_use_def3.cpp:106:5
    logic ss_a[2];
    logic [7:0] ss_b[2];
    integer unsigned port;
    logic [7:0] a;
    logic [7:0] b;
    logic TMP_0;
    logic ss_b_1;
    logic [7:0] c;
    port = s;
    a = s;
    b = t;
    // Call compare() begin
    ss_b_1 = (a == b ? 1 : 2);
    TMP_0 = ss_b_1;
    // Call compare() end
    c = 0;
    // Call set() begin
    ss_b[port] = ss_b[port] + c;
    // Call set() end
end

//------------------------------------------------------------------------------
// Method process: unkwMem (test_use_def3.cpp:121:5) 

// Process-local variables
logic [7:0] m1;
logic [7:0] m2;
logic [7:0] m3;
logic [7:0] mm_b[2];

always_comb 
begin : unkwMem     // test_use_def3.cpp:121:5
    integer unsigned port;
    logic TMP_0;
    logic b;
    logic TMP_1;
    logic b_1;
    port = s;
    m1 = s;
    m2 = s;
    m3 = s;
    // Call compare() begin
    b = (m1 == m2 ? 1 : 2);
    TMP_0 = b;
    // Call compare() end
    // Call set() begin
    mif_b[port] = m3 + mm_b[t];
    // Call set() end
    // Call compare() begin
    b_1 = (mm_b[port] == m2 ? 1 : 2);
    TMP_1 = b_1;
    // Call compare() end
    // Call set() begin
    mm_b[port] = m3 + mm_b[t];
    // Call set() end
end

endmodule


