//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.24
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: Top ()
//
module Top // "top"
(
    input logic clk
);

// Variables generated for SystemC signals
logic nrst;
logic [7:0] b_mod_a_mod_b;

//------------------------------------------------------------------------------
// Method process: unkwMif (test_use_def2.cpp:73:5) 

always_comb 
begin : unkwMif     // test_use_def2.cpp:73:5
    logic TMP_0;
    logic TMP_1;
    // Call get() begin
    // Call get() begin
    TMP_1 = 1;
    // Call get() end
    TMP_0 = TMP_1;
    // Call get() end
end

//------------------------------------------------------------------------------
// Clocked THREAD: unkwMifThrd (test_use_def2.cpp:78:5) 

// Thread-local variables
logic [7:0] b_mod_a_mod_b_next;

// Next-state combinational logic
always_comb begin : unkwMifThrd_comb     // test_use_def2.cpp:78:5
    unkwMifThrd_func;
end
function void unkwMifThrd_func;
    logic [7:0] a;
    b_mod_a_mod_b_next = b_mod_a_mod_b;
    a = '0;
    // Call put() begin
    // Call put() begin
    b_mod_a_mod_b_next = a;
    // Call put() end
    // Call put() end
endfunction

// Synchronous register update
always_ff @(posedge clk or negedge nrst) 
begin : unkwMifThrd_ff
    if ( ~nrst ) begin
    end
    else begin
        b_mod_a_mod_b <= b_mod_a_mod_b_next;
    end
end

endmodule


