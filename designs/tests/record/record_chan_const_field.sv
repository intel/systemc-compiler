//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.25
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: A ()
//
module A // "a_mod"
(
    input logic clk
);

// Variables generated for SystemC signals
logic signed [31:0] s;
logic signed [31:0] rs_x;
logic signed [31:0] rv_x[2];
logic signed [31:0] t0;

// Local parameters generated for C++ constants
localparam logic signed [31:0] S = 43;
localparam logic signed [31:0] G = 44;
localparam logic signed [31:0] GN = 45;

//------------------------------------------------------------------------------
// Method process: record_channel_meth (test_chan_const_field.cpp:103:5) 

always_comb 
begin : record_channel_meth     // test_chan_const_field.cpp:103:5
    integer r_x;
    integer t_x;
    integer TMP_0;
    integer r_par;
    integer r_L;
    integer r_SL;
    integer x;
    integer r_par_1;
    integer r_par_2;
    integer lrec_y;
    integer TMP_1_y;
    integer l_y;
    logic [1:0] TMP_3;
    logic [7:0] r_par_3;
    logic [4:0] i;
    r_x = t_x;
    t0 = r_x + S + S;
    r_x = rs_x;
    r_par = r_x + G + GN;
    // Call f() begin
    r_L = 41;
    r_SL = 42;
    TMP_0 = r_par + r_L + r_SL;
    // Call f() end
    t0 = TMP_0;
    r_x = rs_x;
    rs_x = r_x;
    rs_x = r_x;
    x = rs_x;
    t0 = x + r_x;
    r_par_1 = s;
    // Call getL() begin
    r_par_2 = r_par_1;
    lrec_y = r_par_2;
    TMP_1_y = lrec_y;
    // Call getL() end
    l_y = TMP_1_y;
    t0 = l_y;
    r_par_3 = s;
    // Call getE() begin
    TMP_3 = 2'(r_par_3);
    // Call getE() end
    t0 = TMP_3;
    i = r_x;
    t0 = i;
end

//------------------------------------------------------------------------------
// Method process: record_channel_arr_meth (test_chan_const_field.cpp:129:5) 

always_comb 
begin : record_channel_arr_meth     // test_chan_const_field.cpp:129:5
    integer r_x;
    integer t_x;
    r_x = rv_x[0];
    if (rv_x[1] == 1)
    begin
        r_x = rv_x[s];
    end
    t_x = rv_x[1];
end

endmodule


