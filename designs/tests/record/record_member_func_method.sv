//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.13
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);


//------------------------------------------------------------------------------
// Child module instances

A a_mod
(

);

endmodule



//==============================================================================
//
// Module: A (test_member_func_method.cpp:184:5)
//
module A // "b_mod.a_mod"
(
);

// Variables generated for SystemC signals
logic [1:0] sig;
logic signed [31:0] t0;
logic signed [31:0] t1;
logic signed [31:0] t2;

//------------------------------------------------------------------------------
// Method process: record_meth0 (test_member_func_method.cpp:62:5) 

always_comb 
begin : record_meth0     // test_member_func_method.cpp:62:5
    logic s_a[2];
    logic s_par;
    logic [1:0] i;
    s_par = 1;
    // Call setA() begin
    s_a[1] = s_par;
    // Call setA() end
    i = sig;
    s_par = 0;
    // Call setA() begin
    s_a[i] = s_par;
    // Call setA() end
end

//------------------------------------------------------------------------------
// Method process: record_meth1 (test_member_func_method.cpp:78:5) 

always_comb 
begin : record_meth1     // test_member_func_method.cpp:78:5
    logic s_a[2];
    logic s_par;
    logic b;
    logic [1:0] i;
    logic TMP_2;
    s_par = 1;
    // Call setA() begin
    s_a[1] = s_par;
    // Call setA() end
    b = 1;    // Call of getA()
    i = sig;
    s_par = 0;
    // Call setA() begin
    s_a[i] = s_par;
    // Call setA() end
    // Call getA() begin
    TMP_2 = s_a[i];
    // Call getA() end
    b = TMP_2;
    t0 = b;
end

//------------------------------------------------------------------------------
// Method process: record_meth2 (test_member_func_method.cpp:99:5) 

always_comb 
begin : record_meth2     // test_member_func_method.cpp:99:5
    logic s_a[2][3];
    logic b;
    logic s_par;
    b = 1;
    for (integer i = 0; i < 2; i++)
    begin
        s_par = |i;
        // Call setA() begin
        s_a[i][1] = s_par;
        // Call setA() end
        b = b && 0;
    end
end

//------------------------------------------------------------------------------
// Method process: record_meth2a (test_member_func_method.cpp:110:5) 

always_comb 
begin : record_meth2a     // test_member_func_method.cpp:110:5
    logic s_a[2];
    logic b;
    logic s_par;
    logic TMP_0;
    b = 0;
    for (integer i = 0; i < 2; i++)
    begin
        s_par = |i;
        // Call setA() begin
        s_a[i] = s_par;
        // Call setA() end
        // Call getA() begin
        TMP_0 = s_a[i];
        // Call getA() end
        b = b || TMP_0;
    end
end

//------------------------------------------------------------------------------
// Method process: record_meth2b (test_member_func_method.cpp:122:5) 

always_comb 
begin : record_meth2b     // test_member_func_method.cpp:122:5
    logic s_a[2];
    logic b;
    logic s_par;
    b = 1;
    for (integer i = 0; i < 2; i++)
    begin
        s_par = |i;
        // Call setA() begin
        s_a[i] = s_par;
        // Call setA() end
        b = 1;
    end
end

//------------------------------------------------------------------------------
// Method process: record_meth3 (test_member_func_method.cpp:135:5) 

always_comb 
begin : record_meth3     // test_member_func_method.cpp:135:5
    logic s_a[2];
    logic b;
    logic [1:0] i;
    logic TMP_2;
    logic s_par;
    logic s_l;
    b = 1;    // Call of localVar()
    i = sig;
    s_par = 0;
    // Call localVar() begin
    s_l = s_par || s_a[i];
    TMP_2 = s_l;
    // Call localVar() end
    b = TMP_2;
    t1 = b;
end

//------------------------------------------------------------------------------
// Method process: record_multi_calls (test_member_func_method.cpp:160:5) 

always_comb 
begin : record_multi_calls     // test_member_func_method.cpp:160:5
    logic s_a[2];
    logic [1:0] i;
    logic TMP_0;
    logic s_par;
    logic s_l;
    logic s_par_1;
    integer res;
    i = sig;
    s_par = 1;
    // Call localVar() begin
    s_l = s_par || s_a[i];
    TMP_0 = s_l;
    // Call localVar() end
    s_par_1 = |i;
    // Call setA() begin
    s_a[i] = s_par_1;
    // Call setA() end
    s_par_1 = |6;
    // Call setA() begin
    s_a[i + 1] = s_par_1;
    // Call setA() end
    res = 7;    // Call of f()
    t2 = res;
end

endmodule


