//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.25
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);

// Variables generated for SystemC signals
logic [1:0] a;
logic signed [1:0] as_i;


//------------------------------------------------------------------------------
// Child module instances

A a_mod
(
  .a(a),
  .as_i(as_i)
);

endmodule



//==============================================================================
//
// Module: A (test_array_loops_method.cpp:160:5)
//
module A // "b_mod.a_mod"
(
    input logic [1:0] a,
    input logic signed [1:0] as_i
);

// Variables generated for SystemC signals
logic [1:0] as;
logic s;

//------------------------------------------------------------------------------
// Method process: record_var_loops (test_array_loops_method.cpp:66:5) 

// Process-local variables
logic signed [31:0] rec_a[16];

always_comb 
begin : record_var_loops     // test_array_loops_method.cpp:66:5
    integer num1;
    integer num2;
    num1 = 2;
    num2 = 2;
    rec_a[0] = '0;
    rec_a[1] = 1;
    rec_a[num1++] = num2++;
    rec_a[num1++] = num2++;
    rec_a[num1++] = num2++;
    rec_a[num1++] = num2++;
    num1 = 2;
    rec_a[0] = '0;
    rec_a[1] = 5;
    for (int i = 0; i < 32'(rec_a[a] - 5'sd10); i++)
    begin
        rec_a[as + i] = 6'sd30 + i;
    end
    rec_a[as_i] = 35;
    rec_a[s] = 40;
end

//------------------------------------------------------------------------------
// Method process: record_var_loops_binary (test_array_loops_method.cpp:103:5) 

// Process-local variables
logic [15:0] rec2a_a[12];
logic [15:0] rec2b_a[12];
logic [31:0] rec2b_c[12];
logic [31:0] rec2b_d[12];
logic [31:0] rec2b_e[12];
logic [31:0] rec2b_f[12];
logic [31:0] rec2b_g[12];
logic [31:0] rec2b_h[12];

always_comb 
begin : record_var_loops_binary     // test_array_loops_method.cpp:103:5
    integer num1;
    integer num2;
    integer num1a;
    num1 = 2;
    num2 = 2;
    rec2a_a[0] = '0;
    rec2a_a[1] = 1;
    rec2a_a[num1++] = num2++;
    rec2a_a[num1++] = num2++;
    rec2a_a[num1++] = num2++;
    rec2a_a[num1++] = num2++;
    num1a = 2;
    rec2b_a[0] = rec2a_a[0] & rec2a_a[1];
    rec2b_a[1] = rec2a_a[1] | rec2a_a[2];
    rec2b_a[num1a++] = rec2a_a[2] ^ rec2a_a[3];
    rec2b_a[num1a++] = !(|(rec2a_a[2] ^ rec2a_a[3]));
    rec2b_a[num1a++] = 1;
    rec2b_a[num1a++] = '0;
    for (int p = 0; p < 6; p++)
    begin
        rec2b_c[p] = rec2a_a[p] | rec2b_a[p];
        rec2b_d[p] = rec2a_a[p] & rec2b_a[p];
        rec2b_e[p] = rec2a_a[p] ^ rec2b_a[p];
        rec2b_f[p] = !(|rec2a_a[p]);
        rec2b_g[p] = |rec2a_a[p] || |rec2b_a[p];
        rec2b_h[p] = |rec2a_a[p] && |rec2b_a[p];
    end
end

endmodule


