//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.6.25
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: B_top ()
//
module B_top // "b_mod"
(
);


//------------------------------------------------------------------------------
// Child module instances

A a_mod
(

);

endmodule



//==============================================================================
//
// Module: A (test_if_method.cpp:78:5)
//
module A // "b_mod.a_mod"
(
);

// Variables generated for SystemC signals
logic dummy;
logic signed [31:0] t0;

//------------------------------------------------------------------------------
// Method process: record_fcall (test_if_method.cpp:45:5) 

always_comb 
begin : record_fcall     // test_if_method.cpp:45:5
    logic s1_a;
    integer s1_b;
    logic TMP_0;
    logic par_a;
    integer par_b;
    logic c;
    logic s2_a;
    integer s2_b;
    par_a = s1_a; par_b = s1_b;
    // Call f() begin
    TMP_0 = par_a;
    // Call f() end
    c = TMP_0;
    if (c)
    begin
        s2_b = 42;
    end
end

//------------------------------------------------------------------------------
// Method process: record_fcall2 (test_if_method.cpp:57:5) 

// Process-local variables
logic rec_a;

always_comb 
begin : record_fcall2     // test_if_method.cpp:57:5
    logic s1_a;
    integer s1_b;
    logic s2_a;
    integer s2_b;
    integer s1_1;
    t0 = '0;
    rec_a = dummy;
    // Call seta() begin
    s1_a = 1;
    // Call seta() end
    // Call seta() begin
    s2_a = 1;
    // Call seta() end
    if (rec_a)
    begin
        s1_1 = s2_b;
        t0 = s1_1;
    end
end

endmodule


